# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions
name: Build and deploy Python app to Azure Web App - jre-shussatsu-stage
on:
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      # Python依存関係のキャッシュ（必要に応じてコメント解除）
      # - name: Cache Python dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-
      
      # Skip Python dependencies installation - let Azure App Service Oryx handle it
      # - name: Create and start virtual environment
      #   run: |
      #     python -m venv venv
      #     source venv/bin/activate
      
      # - name: Install backend dependencies
      #   run: |
      #     cd backend
      #     pip install -r requirements.txt
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      # Node.js依存関係のキャッシュ
      - name: Cache node modules
        uses: actions/cache@v3
        id: node-cache
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # フロントエンドビルドキャッシュ
      - name: Cache frontend build
        uses: actions/cache@v3
        id: frontend-build-cache
        with:
          path: frontend/dist
          key: ${{ runner.os }}-frontend-build-${{ hashFiles('frontend/src/**', 'frontend/package-lock.json', 'frontend/vite.config.ts', 'frontend/tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-build-
      
      # 依存関係のインストール（キャッシュがない場合のみ）
      - name: Install frontend dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: |
          cd frontend
          npm ci
      
      # フロントエンドのビルド（ビルドキャッシュがない場合のみ）
      - name: Build frontend
        if: steps.frontend-build-cache.outputs.cache-hit != 'true'
        run: |
          cd frontend
          npm run build
          
      - name: Copy frontend build to static directory
        run: |
          mkdir -p static
          cp -r frontend/dist/* static/
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'jre-shussatsu-stage'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9698F6ECD00446E1BF8E5E416907CEEE }}
